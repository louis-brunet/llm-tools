name: release
on:
  push:
    branches:
      - main

jobs:
  test:
    name: Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ["22.14"]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/test
        with:
          node-version: ${{ matrix.node-version }}
          workspace-from: 'packages/apps/*'

  build_zsh_plugin:
    name: Build zsh plugin
    needs:
      - test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - working-directory: examples/zsh
        run: tar -czvf zsh-plugin.tgz llm-tools
      - uses: actions/upload-artifact@v4
        with:
          name: zsh-plugin-artifact
          path: examples/zsh/zsh-plugin.tgz
          if-no-files-found: error
          retention-days: 1

  build_cli:
    name: Build CLI
    needs:
      - test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/install
      - run: yarn run build:cli
      - run: yarn run bundle:cli
      - uses: actions/upload-artifact@v4
        with:
          name: cli-artifact
          path: packages/apps/cli/build/bundle.js
          if-no-files-found: error
          retention-days: 1

  publish_release:
    name: Publish release
    needs:
      - build_cli
      - build_zsh_plugin
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - uses: actions/download-artifact@v4
      - name: Rename artifacts
        run: |
          mv cli-artifact/bundle.js cli-artifact/cli.js
      - name: Create GitHub release
        env:
          GH_REPO: ${{ github.repository }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          release_tag="$(git rev-parse --short "$GITHUB_SHA")"
          release_target="$GITHUB_SHA"
          release_title="CLI - $GITHUB_SHA"
          gh release create \
            "$release_tag" \
            --target "$release_target" \
            --title "$release_title" \
            --prerelease \
            cli-artifact/cli.js \
            zsh-plugin-artifact/zsh-plugin.tgz
